# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gestioneBackup.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import os
import subprocess

from PyQt5.QtWidgets import QMessageBox


class Ui_GestioneBackup(object):
    def setupUi(self, GestioneBackup):
        GestioneBackup.setObjectName("GestioneBackup")
        GestioneBackup.resize(739, 267)
        GestioneBackup.setStyleSheet("background-color: rgb(159, 197, 248);")
        self.listWidget = QtWidgets.QListWidget(GestioneBackup)
        self.listWidget.setGeometry(QtCore.QRect(10, 10, 721, 171))
        font = QtGui.QFont()
        font.setFamily("Georgia")
        font.setPointSize(20)
        self.listWidget.setFont(font)
        self.listWidget.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.listWidget.setObjectName("listWidget")
        self.pushButton = QtWidgets.QPushButton(GestioneBackup)
        self.pushButton.setGeometry(QtCore.QRect(10, 190, 721, 71))
        font = QtGui.QFont()
        font.setFamily("Georgia")
        font.setPointSize(28)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color: rgb(245, 243, 201);")
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.pushButtonClicked)
        self.retranslateUi(GestioneBackup)
        QtCore.QMetaObject.connectSlotsByName(GestioneBackup)

        self.load_data_list()

    def load_data_list(self):
        sql_files = [f for f in os.listdir(os.path.join(os.path.dirname(os.path.abspath(__file__)),"..", "BackupSql"))]
        sql_files.sort(reverse=True)
        self.listWidget.addItems(sql_files)


    def retranslateUi(self, GestioneBackup):
        _translate = QtCore.QCoreApplication.translate
        GestioneBackup.setWindowTitle(_translate("GestioneBackup", "Gestione backup database"))
        self.pushButton.setText(_translate("GestioneBackup", "RIPRISTINA DATABASE"))

    def pushButtonClicked(self):
        selectedRow = self.listWidget.currentRow()
        if selectedRow == -1:
            dlg = QMessageBox()
            dlg.setWindowTitle("Errore")
            dlg.setText("Non hai selezionato nessun elemento!")
            dlg.setStandardButtons(QMessageBox.Ok)
            dlg.setIcon(QMessageBox.Critical)
            dlg.exec()
        else:
            backupFileName = self.listWidget.currentItem().text()
            backupDir = os.path.join(os.path.dirname(os.path.abspath(__file__)), "BackupSql")
            backupFilePath = os.path.join(backupDir, backupFileName)
            if not os.path.isfile(backupFilePath): #se il file non esiste lo fa sapere
                dlg = QMessageBox()
                dlg.setWindowTitle("Errore")
                dlg.setText("Il file non esiste")
                dlg.setStandardButtons(QMessageBox.Ok)
                dlg.setIcon(QMessageBox.Critical)
                dlg.exec()
                return
            data = backupFileName[22:32]
            orario = backupFileName[33:41]
            orario = orario.replace("-", ":")
            dlg = QMessageBox()
            dlg.setWindowTitle("Ripristino database")
            dlg.setText(
                f"Sicuro di voler ripristinare lo stato del database a quello della seguente data (anno-mese-giorno): {data}, con orario (ora-minuto-secondo): {orario}")
            dlg.setStandardButtons(QMessageBox.Yes | QMessageBox.No)
            dlg.setIcon(QMessageBox.Warning)
            button = dlg.exec()
            if button == QMessageBox.Yes:
                command = f"mysql -h {host} -P {port} -u {user} -p{password} {database} < \"{backupFilePath}\""
                try:
                    # Esegui il comando
                    subprocess.run(command, shell=True, check=True)
                    dlg = QMessageBox()
                    dlg.setWindowTitle("Successo")
                    dlg.setText("Il database Ã© stato ripristinato correttamente")
                    dlg.setStandardButtons(QMessageBox.Ok)
                    dlg.setIcon(QMessageBox.Information)
                    dlg.exec()
                except subprocess.CalledProcessError as e:
                    dlg = QMessageBox()
                    dlg.setWindowTitle("Errore")
                    dlg.setText(f"Errore durante il riprisitno del database: {e}")
                    dlg.setStandardButtons(QMessageBox.Ok)
                    dlg.setIcon(QMessageBox.Information)
                    dlg.exec()
#parametri di connessione
host = "localhost"
user = "root"
password = "password"
database = "mydbristorante"
port = 3360

if __name__ == "__main__":
            import sys
            app = QtWidgets.QApplication(sys.argv)
            formGestioneMagazzino = QtWidgets.QDialog()
            ui = (Ui_GestioneBackup())
            ui.setupUi(formGestioneMagazzino)
            formGestioneMagazzino.show()
            sys.exit(app.exec_())
