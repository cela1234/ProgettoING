# -*- coding: utf-8 -*-
# Form implementation generated from reading ui file 'F:\Users\framo\Desktop\ProgettoING-master\form_ui\Tavoli.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import datetime

import mysql
from MySQLdb import Error
from PyQt5.QtGui import QColor
from PyQt5.QtWidgets import QDialog, QPushButton

import Metodi_Gestione_Tavoli
from form_Cameriere import dettaglioTavolo
from .formAggiungi_Tavolo import Ui_FrameAggiungiTavolo
from PyQt5 import QtCore, QtGui, QtWidgets
import mysql.connector
from PyQt5.QtWidgets import QMessageBox
from db_connection import get_connection


class Ui_FormCameriere(object):

    FormCam=None
    salaCorrente="pizzeria"
    def setupUi(self, FormCameriere):
        self.FormCam=FormCameriere
        FormCameriere.setObjectName("FormCameriere")
        FormCameriere.resize(987, 595)
        self.frameStatoTavoli = QtWidgets.QFrame(FormCameriere)
        self.frameStatoTavoli.setGeometry(QtCore.QRect(730, 50, 241, 251))
        self.frameStatoTavoli.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frameStatoTavoli.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frameStatoTavoli.setObjectName("frameStatoTavoli")
        self.label = QtWidgets.QLabel(self.frameStatoTavoli)
        self.label.setGeometry(QtCore.QRect(10, 10, 81, 16))
        font = QtGui.QFont()
        font.setFamily("Georgia")
        font.setPointSize(9)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.frame_2 = QtWidgets.QFrame(self.frameStatoTavoli)
        self.frame_2.setGeometry(QtCore.QRect(10, 40, 41, 41))
        self.frame_2.setStyleSheet("background-color: rgb(93, 255, 68);")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame_2.setObjectName("frame_2")
        self.lblLiberi = QtWidgets.QLabel(self.frame_2)
        self.lblLiberi.setGeometry(QtCore.QRect(10, 10, 21, 21))
        self.lblLiberi.setObjectName("lblLiberi")
        self.frame_3 = QtWidgets.QFrame(self.frameStatoTavoli)
        self.frame_3.setGeometry(QtCore.QRect(10, 90, 41, 41))
        self.frame_3.setStyleSheet("background-color: rgb(247, 89, 89);")
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame_3.setObjectName("frame_3")
        self.lblOccupati = QtWidgets.QLabel(self.frame_3)
        self.lblOccupati.setGeometry(QtCore.QRect(10, 10, 21, 21))
        self.lblOccupati.setObjectName("lblOccupati")
        self.frame_4 = QtWidgets.QFrame(self.frameStatoTavoli)
        self.frame_4.setGeometry(QtCore.QRect(10, 140, 41, 41))
        self.frame_4.setStyleSheet("background-color: rgb(101, 226, 240);")
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame_4.setObjectName("frame_4")
        self.lblPrenotati = QtWidgets.QLabel(self.frame_4)
        self.lblPrenotati.setGeometry(QtCore.QRect(10, 10, 21, 21))
        self.lblPrenotati.setObjectName("lblPrenotati")
        self.frame_5 = QtWidgets.QFrame(self.frameStatoTavoli)
        self.frame_5.setGeometry(QtCore.QRect(10, 190, 41, 41))
        self.frame_5.setStyleSheet("background-color: rgb(255, 217, 102);")
        self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame_5.setObjectName("frame_5")
        self.lblInAttesa = QtWidgets.QLabel(self.frame_5)
        self.lblInAttesa.setGeometry(QtCore.QRect(10, 10, 21, 21))
        self.lblInAttesa.setObjectName("lblInAttesa")
        self.label_2 = QtWidgets.QLabel(self.frameStatoTavoli)
        self.label_2.setGeometry(QtCore.QRect(60, 50, 71, 20))
        font = QtGui.QFont()
        font.setFamily("Georgia")
        font.setPointSize(9)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.frameStatoTavoli)
        self.label_3.setGeometry(QtCore.QRect(60, 100, 71, 20))
        font = QtGui.QFont()
        font.setFamily("Georgia")
        font.setPointSize(9)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.frameStatoTavoli)
        self.label_4.setGeometry(QtCore.QRect(60, 150, 71, 20))
        font = QtGui.QFont()
        font.setFamily("Georgia")
        font.setPointSize(9)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.frameStatoTavoli)
        self.label_5.setGeometry(QtCore.QRect(60, 200, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Georgia")
        font.setPointSize(9)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.frameButtonSale = QtWidgets.QFrame(FormCameriere)
        self.frameButtonSale.setGeometry(QtCore.QRect(20, 20, 701, 31))
        self.frameButtonSale.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frameButtonSale.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frameButtonSale.setObjectName("frameButtonSale")
        self.btSalaPizzeria = QtWidgets.QPushButton(self.frameButtonSale)
        self.btSalaPizzeria.setGeometry(QtCore.QRect(0, 0, 93, 28))
        self.btSalaPizzeria.setStyleSheet("background-color: rgb(149, 188, 242);")
        self.btSalaPizzeria.setObjectName("btSalaPizzeria")
        self.btSalaPrincipale = QtWidgets.QPushButton(self.frameButtonSale)
        self.btSalaPrincipale.setGeometry(QtCore.QRect(90, 0, 93, 28))
        self.btSalaPrincipale.setObjectName("btSalaPrincipale")
        self.btSalaPrive = QtWidgets.QPushButton(self.frameButtonSale)
        self.btSalaPrive.setGeometry(QtCore.QRect(180, 0, 93, 28))
        self.btSalaPrive.setObjectName("btSalaPrive")
        self.btSalaOpenSpace = QtWidgets.QPushButton(self.frameButtonSale)
        self.btSalaOpenSpace.setGeometry(QtCore.QRect(270, 0, 93, 28))
        self.btSalaOpenSpace.setObjectName("btSalaOpenSpace")
        self.btSalaSaletta = QtWidgets.QPushButton(self.frameButtonSale)
        self.btSalaSaletta.setGeometry(QtCore.QRect(360, 0, 93, 28))
        self.btSalaSaletta.setObjectName("btSalaSaletta")
        self.btSalaAsporto = QtWidgets.QPushButton(self.frameButtonSale)
        self.btSalaAsporto.setGeometry(QtCore.QRect(600, 0, 93, 28))
        self.btSalaAsporto.setObjectName("btSalaAsporto")
        self.scroallArea = QtWidgets.QScrollArea(FormCameriere)
        self.scroallArea.setStyleSheet("background-color: rgb(181, 245, 244);")
        self.scroallArea.setGeometry(QtCore.QRect(20, 50, 691, 511))
        self.scroallArea.setWidgetResizable(True)
        self.scroallArea.setObjectName("scroallArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 689, 509))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.frameTavoli = QtWidgets.QFrame(self.scrollAreaWidgetContents)
        self.frameTavoli.setGeometry(QtCore.QRect(0, 0, 691, 511))
        self.frameTavoli.setStyleSheet("background-color: rgb(181, 245, 244);")
        self.frameTavoli.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frameTavoli.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frameTavoli.setObjectName("frameTavoli")
        self.scroallArea.setWidget(self.scrollAreaWidgetContents)
        self.frame = QtWidgets.QFrame(FormCameriere)
        self.frame.setGeometry(QtCore.QRect(730, 470, 241, 91))
        self.frame.setStyleSheet("border-color: rgb(255, 0, 0);")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame.setObjectName("frame")
        self.label_6 = QtWidgets.QLabel(self.frame)
        self.label_6.setGeometry(QtCore.QRect(10, 10, 111, 21))
        font = QtGui.QFont()
        font.setFamily("Georgia")
        font.setPointSize(9)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.btAggiungiTavolo = QtWidgets.QPushButton(self.frame)
        self.btAggiungiTavolo.setGeometry(QtCore.QRect(10, 50, 121, 28))
        self.btAggiungiTavolo.setObjectName("btAggiungiTavolo")

        # do a tutti i button per selezionare la sala un evento click
        self.btSalaPrive.clicked.connect(lambda: self.btSalaCliccato(self.btSalaPrive))  # Collega l'evento clic a handleButtonClick
        self.btSalaAsporto.clicked.connect(lambda: self.btSalaCliccato(self.btSalaAsporto))
        self.btSalaSaletta.clicked.connect(lambda: self.btSalaCliccato(self.btSalaSaletta))
        self.btSalaPizzeria.clicked.connect(lambda: self.btSalaCliccato(self.btSalaPizzeria))
        self.btSalaOpenSpace.clicked.connect(lambda: self.btSalaCliccato(self.btSalaOpenSpace))
        self.btSalaPrincipale.clicked.connect(lambda: self.btSalaCliccato(self.btSalaPrincipale))
        self.btAggiungiTavolo.clicked.connect(self.btAggiungiTavoloClicked)

        # Aggiungi un QFrame dedicato per il pulsante "Prenotazioni"
        self.framePrenotazioni = QtWidgets.QFrame(FormCameriere)
        self.framePrenotazioni.setGeometry(QtCore.QRect(730, 400, 241, 50))  # Posizione sopra "Gestisci Tavoli"
        self.framePrenotazioni.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.framePrenotazioni.setFrameShadow(QtWidgets.QFrame.Plain)
        self.framePrenotazioni.setObjectName("framePrenotazioni")

        # Aggiungi il pulsante "Prenotazioni"
        self.btPrenotazioni = QtWidgets.QPushButton(self.framePrenotazioni)
        self.btPrenotazioni.setGeometry(QtCore.QRect(10, 10, 121, 28))
        self.btPrenotazioni.setObjectName("btPrenotazioni")

        # Collegamento per il pulsante "Prenotazioni"
        self.btPrenotazioni.clicked.connect(self.btPrenotazioniClicked)

        self.retranslateUi(FormCameriere)
        QtCore.QMetaObject.connectSlotsByName(FormCameriere)

    def retranslateUi(self, FormCameriere):
        _translate = QtCore.QCoreApplication.translate
        FormCameriere.setWindowTitle(_translate("FormCameriere", "Tavoli"))
        self.label.setText(_translate("FormCameriere", "Stato tavoli:"))
        self.lblLiberi.setText(_translate("FormCameriere", "0"))
        self.lblOccupati.setText(_translate("FormCameriere", "0"))
        self.lblPrenotati.setText(_translate("FormCameriere", "0"))
        self.lblInAttesa.setText(_translate("FormCameriere", "0"))
        self.label_2.setText(_translate("FormCameriere", "Liberi"))
        self.label_3.setText(_translate("FormCameriere", "Occupati"))
        self.label_4.setText(_translate("FormCameriere", "Prenotati"))
        self.label_5.setText(_translate("FormCameriere", "In attesa"))
        self.btSalaPizzeria.setText(_translate("FormCameriere", "Pizzeria"))
        self.btSalaPrincipale.setText(_translate("FormCameriere", "Principale"))
        self.btSalaPrive.setText(_translate("FormCameriere", "Privè"))
        self.btSalaOpenSpace.setText(_translate("FormCameriere", "Open Space"))
        self.btSalaSaletta.setText(_translate("FormCameriere", "Saletta"))
        self.btSalaAsporto.setText(_translate("FormCameriere", "Asporto"))
        self.label_6.setText(_translate("FormCameriere", "Gestisci Tavoli:"))
        self.btPrenotazioni.setText(_translate("FormCameriere", "Prenotazioni"))
        self.btAggiungiTavolo.setText(_translate("FormCameriere", "Aggiungi Tavolo"))
        #infine faccio update di label e tavoli
        self.updateLabel_e_Tavoli()

    def btPrenotazioniClicked(self):
        from form_Prenotazioni import GestionePrenotazioni
        self.formGestionePrenotazioni = QtWidgets.QDialog()
        self.uiGestPrenot = GestionePrenotazioni.Ui_GestionePrenotazioni()
        self.uiGestPrenot.setupUi(self.formGestionePrenotazioni)
        self.formGestionePrenotazioni.show()

    def btSalaCliccato(self, btn_cliccato):
        bottoni_sale = [self.btSalaPrive, self.btSalaSaletta, self.btSalaPizzeria, self.btSalaOpenSpace,
                             self.btSalaPrincipale, self.btSalaAsporto]

        # Imposta lo sfondo del bottone cliccato su azzurro
        btn_cliccato.setStyleSheet("background-color: rgb(149, 188, 242)")

        # Imposta lo sfondo di tutti gli altri bottoni sulla selezione della categoria su grigio
        for btn in bottoni_sale:
            if btn != btn_cliccato:
                btn.setStyleSheet("background-color: rgb(225, 225, 225)")
        self.salaCorrente=btn_cliccato.text().lower()
        self.updateLabel_e_Tavoli()

    def btAggiungiTavoloClicked(self):
        # Blocca la finestra corrente
        self.FormCam.setEnabled(False)

        # Crea un'istanza della seconda form e aprila
        self.aggiungi_tavolo_form = QDialog()
        self.ui_aggiungi_tavolo = Ui_FrameAggiungiTavolo()
        self.ui_aggiungi_tavolo.setupUi(self.aggiungi_tavolo_form)
        self.aggiungi_tavolo_form.exec_()

        # Riattiva la finestra corrente dopo che la seconda form viene chiusa
        self.FormCam.setEnabled(True)
        self.updateLabel_e_Tavoli()

    def updateLabel_e_Tavoli(self):
        self.aggiorna_prenotazioni()
        self.updateTableLabels(self.salaCorrente)
        self.createTableButtons(self.FormCam, self.salaCorrente)



    def updateTableLabels(self, salaSelezionata):
        Metodi_Gestione_Tavoli.aggiorna_stato_tavoli()
        try:
            myconn = get_connection()
            cursor = myconn.cursor()

            # Esecuzione della query per contare i tavoli in base allo stato e alla sala selezionata
            query = "SELECT stato, COUNT(*) FROM tavolo WHERE sala = %s GROUP BY stato"
            cursor.execute(query, (salaSelezionata,))
            results = cursor.fetchall()
            self.lblLiberi.setText(str(0))
            self.lblOccupati.setText(str(0))
            self.lblPrenotati.setText(str(0))
            self.lblInAttesa.setText(str(0))

            for row in results:
                stato, count = row
                if stato == "libero":
                    self.lblLiberi.setText(str(count))
                elif stato == "occupato":
                    self.lblOccupati.setText(str(count))
                elif stato == "prenotato":
                    self.lblPrenotati.setText(str(count))
                elif stato == "in attesa":
                    self.lblInAttesa.setText(str(count))

        except Error as e:
            print(f"Errore durante l'accesso al database: {e}")

        finally:
            if myconn:
                myconn.close()

    def createTableButtons(self, FormCameriere, salaSelezionata):
        try:
            # Elimina tutti i bottoni creati precedentemente
            for widget in self.scrollAreaWidgetContents.findChildren(QtWidgets.QPushButton):
                if widget.objectName().startswith("tableButton_"):  # Elimina solo i pulsanti che rappresentano i tavoli
                    widget.deleteLater()

            myconn = get_connection()
            cursor = myconn.cursor()

            # Esecuzione della query per ottenere l'ID e il numero di tavolo
            query = "SELECT id, numero, sala, stato FROM tavolo WHERE sala = %s"
            cursor.execute(query, (salaSelezionata,))
            tables = cursor.fetchall()

            # Calcola il numero di righe e colonne in base al numero di tavoli
            num_rows = (len(tables) + 4) // 5  # 5 tavoli per riga
            num_cols = 5

            # Calcola le dimensioni dei bottoni
            button_width = 111
            button_height = 91
            spacing = 20

            # Posizione iniziale dei bottoni
            start_x = 20
            start_y = 20

            # Definisci i colori per gli stati dei tavoli
            color_map = {
                "occupato": "rgb(247, 89, 89);",
                "libero": "rgb(93, 255, 68);",
                "prenotato": "rgb(101, 226, 240);",
                "in attesa": "rgb(255, 217, 102);"
            }

            # Ridimensiona il contenuto della scrollArea in base al numero di tavoli
            content_height = start_y + num_rows * (button_height + spacing)
            self.scrollAreaWidgetContents.setMinimumHeight(content_height)

            # Creazione dei bottoni all'interno di scrollAreaWidgetContents
            for i, (table_id, table_number, table_sala, table_status) in enumerate(tables):
                row = i // num_cols
                col = i % num_cols

                button = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
                button.setGeometry(QtCore.QRect(start_x + col * (button_width + spacing),
                                                start_y + row * (button_height + spacing),
                                                button_width,
                                                button_height))
                button.setObjectName("tableButton_" + str(table_id))
                button.setText(str(table_number))
                # Imposta lo stile del pulsante in base allo stato del tavolo
                button.setStyleSheet("background-color: {}".format(color_map.get(table_status, "gray")))
                # Connetti il pulsante alla funzione di gestione del click
                button.clicked.connect(lambda state, id=table_id: self.tableButtonClicked(id))
                button.setVisible(True)

            # Aggiorna il contenuto della scrollArea
            self.scroallArea.setWidget(self.scrollAreaWidgetContents)

        except Error as e:
            print(f"Errore durante l'accesso al database: {e}")

        finally:
            if myconn:
                myconn.close()

    def tableButtonClicked(self, table_id):

        # Blocca la finestra corrente
        self.FormCam.setEnabled(False)

        # Crea un'istanza della seconda form e aprila
        self.formDettaglioTavolo = QtWidgets.QDialog()
        self.ui_dettaglio_tavolo = dettaglioTavolo.Ui_DettaglioTavolo()
        self.ui_dettaglio_tavolo.setupUi(self.formDettaglioTavolo,table_id,self)
        self.formDettaglioTavolo.exec_()

        # Riattiva la finestra corrente dopo che la seconda form viene chiusa
        self.FormCam.setEnabled(True)
        self.updateLabel_e_Tavoli()

    def aggiorna_prenotazioni(self):
        try:
            conn = get_connection()

            if conn.is_connected():
                cursor = conn.cursor()

                # Ottieni la data e ora attuale
                lb = datetime.datetime.now() - datetime.timedelta( minutes=45)
                # Calcola il limite superiore (1 ora e 30 minuti dall'ora attuale)
                ub = lb + datetime.timedelta( minutes=45)

                # Seleziona tutte le prenotazioni con DataEOraPrenotazione entro il limite
                query = """
                SELECT idTavolo, DataEOraPrenotazione
                FROM prenotazione
                WHERE DataEOraPrenotazione BETWEEN %s AND %s
                """
                cursor.execute(query, (lb, ub))
                prenotazioni = cursor.fetchall()

                for prenotazione in prenotazioni:
                    idTavolo, DataEOraPrenotazione = prenotazione

                    # Controlla lo stato del tavolo
                    query_tavolo = "SELECT stato FROM tavolo WHERE id = %s"
                    cursor.execute(query_tavolo, (idTavolo,))
                    risultato = cursor.fetchone()

                    if risultato and risultato[0] == 'libero':
                        # Aggiorna lo stato del tavolo a 'prenotato'
                        aggiorna_query = "UPDATE tavolo SET stato='prenotato' WHERE id=%s"
                        cursor.execute(aggiorna_query, (idTavolo,))
                        conn.commit()

                cursor.close()
                conn.close()

        except Error as e:
            QMessageBox.critical(self.FormCam, "Errore", f"Errore durante l'aggiornamento delle prenotazioni: {e}")

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    FormCam = QtWidgets.QDialog()
    ui = Ui_FormCameriere()
    ui.setupUi(FormCam)
    ui.updateTableLabels("pizzeria")  # Aggiorna le label quando viene visualizzata la finestra
    ui.createTableButtons(FormCam, "pizzeria")
    FormCam.show()
    sys.exit(app.exec_())
